//A1: Write a C Program to study all file operations related SYSTEM CALLS supported by UNIX OS and C libraries for file operations.

#include <stdio.h> 
#include <fcntl.h> 	       // For open() 
#include <unistd.h>        // For close(), read(), write(), unlink() 
#include <string.h> 

int main() { 
int fd;                               // File descriptor 
char buffer[100]; 

// 1. CREATING AND OPENING A FILE: Using open() 
fd = open("testfile.txt", O_WRONLY | O_CREAT | O_TRUNC, 0644); 
if (fd == -1) { 
perror("Error opening file"); 
return 1; } 

// 2. WRITING TO A FILE: Using write() 
write(fd, "Hello, World!\n", 14); 

// 3. CLOSING A FILE: Using close() 
close(fd); 

// 4. READING FROM A FILE: Open for reading 
fd = open("testfile.txt", O_RDONLY); 
if (fd == -1) { 
perror("Error opening file for reading"); 
return 1; } 

// 5. READ CONTENT: Using read() 
read(fd, buffer, sizeof(buffer) - 1); 
buffer[99] = '\0'; // Null terminate the buffer 
printf("File contents: %s", buffer); 

// 6. CLOSE FILE AFTER READING 
close(fd); 

// 7. DELETING THE FILE: Using unlink() 
if (unlink("testfile.txt") == -1) { 
perror("Error deleting file"); 
return 1; 
} else { 
printf("File 'testfile.txt' deleted successfully.\n");} 
return 0; 
}



